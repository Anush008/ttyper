name: Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  binaries:
    name: Build release binaries
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: ttyper-x86_64-unknown-linux-gnu.tar.gz

          - target: aarch64-apple-darwin
            os: macos-latest
            name: ttyper-aarch64-apple-darwin.tar.gz

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          NO_RESOURCES: true

      - name: Post Build | Prepare Artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip ttyper.exe
          7z a ../../../${{ matrix.name }} ttyper.exe
          cd -

      - name: Post Build | Prepare Artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip ttyper || true
          tar czvf ../../../${{ matrix.name }} ttyper
          cd -

      - name: Deploy | Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  github-release:
    name: GitHub Release
    needs: binaries
    runs-on: ubuntu-latest

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2

      - name: Setup | Checksums
        run: for file in ttyper-*/ttyper-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Publish
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref_name, 'pre') }}
          files: |
            ttyper-*/ttyper-*
            LICENSE.md

  npm-release:
    name: NPM Publish
    needs: github-release
    runs-on: ubuntu-latest

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup | Vesion
        run: npm version ${{ github.ref_name }}
        working-directory: ./npm

      - name: Setup | Dependencies
        run: npm ci
        working-directory: ./npm

      - name: NPM Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ./npm
